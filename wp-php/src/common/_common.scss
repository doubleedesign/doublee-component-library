* {
	box-sizing: border-box;
}

body {
	font-family: $body-font-family;
}

a {
	color: inherit;
	transition: color 0.3s ease, text-decoration-color 0.3s ease, background 0.3s ease;
	text-decoration-color: rgba(map-get($colours, 'dark'), 0.5);

	@include hover-focus-active {
		color: map-get($colours, 'accent');
		text-decoration-color: currentcolor;
	}
}

a,
button {

	@include keyboard-focus {
		box-shadow: 0 0 3px 2px map-get($colours, 'primary');
		outline-color: map-get($colours, 'primary');
	}
}

small {
	font-size: map-get($fontSizes, xs);
}

img,
svg {
	max-width: 100%;
}

.media-item {

	&--aspect-ratio-crop {
		position: relative;

		img {
			position: absolute;
			inset: 0 0 0 0;
			width: 100%;
			height: 100%;
			object-fit: cover;
			object-position: center center;
		}

		&-none {

			img {
				position: relative;
			}
		}

		&-square {
			padding-top: map-get($aspect-ratios, '1x1');
		}

		&-four-three {
			padding-top: map-get($aspect-ratios, '4x3');
		}

		&-sixteen-nine {
			padding-top: map-get($aspect-ratios, '16x9');
		}
	}
}

@each $colour, $value in $colours {
	.bg-#{$colour} {
		background: $value;

		&.module + .module.bg-#{$colour},
		&.module + .module.bg-#{$colour} {
			padding-top: 0;
		}

		&.entry-content,
		.entry-content {
			color: color-contrast($value, $color-contrast-dark: map-get($greys, '900'), $color-contrast-light: map-get($greys, '200'));

			a:not(.btn):not(.email-address) {
				color: color-contrast($value);
				text-decoration-color: rgba(color-contrast($value), 0.2);
				vertical-align: top;

				&:before {
					height: 1px;
					bottom: 2px;
				}

				@include hover-focus-active {
					color: map-get($colours, 'accent');
				}
			}
			// see components/_buttons.scss for button defaults based on bg colour

			blockquote {
				background: rgba(color-contrast($value, $color-contrast-dark: map-get($colours, 'primary'), $color-contrast-light: map-get($colours, 'dark')), 0.1);
				border-left: 0.25rem solid color-contrast($value, $color-contrast-dark: map-get($colours, 'primary'), $color-contrast-light: map-get($colours, 'dark'));
			}

			.wp-caption-text {
				color: color-contrast($value, $color-contrast-dark: map-get($greys, '600'), $color-contrast-light: map-get($greys, '300'));
			}

			.email-address {
				display: flex;
				align-items: center;
				font-weight: map-get($fontWeights, 'semibold');
				color: map-get($colours, 'secondary');

				&:before {
					height: 3px;
					bottom: 4px;
				}

				i, svg {
					font-size: 1em;
					margin-right: map-get($spacing, 'sm');
					color: map-get($colours, 'secondary');
					transition: all 0.3s ease;
				}

				@include hover-focus-active {
					color: darken(map-get($colours, 'secondary'), 10%);

					i, svg {
						transform: rotate(-35deg);
						transform-origin: center center;
					}
				}
			}
		}
	}
}

.bg-white,
.bg-light,
.bg-transparent {

	@each $colour, $value in $colours {
		.theme-#{$colour},
		&.theme-#{$colour} {
			h1, h2, h3 {
				color: $value;
			}

			a:not(.btn):not(.email-address) {
				@include underline-from-center($value);

				&:before {
					height: 1px;
					bottom: 2px;
				}

				@include hover-focus-active {
					color: $value;
					text-decoration-color: transparent;
				}
			}

			blockquote {
				background: rgba($value, 0.1);
				border-left: 0.25rem solid $value;
			}
		}
	}
}

.site-overlay {
	background: rgba(map-get($colours, 'dark'), 0.8);
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	visibility: hidden;
	z-index: -500;
	opacity: 0;
	transition: opacity 0.3s ease;

	&--open {
		visibility: visible;
		z-index: 1;
		opacity: 1;
	}
}

.sr-only {
	@include visually-hidden;
}
