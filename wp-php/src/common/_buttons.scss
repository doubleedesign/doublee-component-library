.btn {
	appearance: none;
	display: inline-flex;
	align-items: center;
	text-align: center;
	font-family: $body-font-family;
	font-weight: map-get($fontWeights, 'semibold');
	font-size: map-get($fontSizes, 'sm');
	line-height: 1.25;
	padding: map-get($spacing, 'sm') map-get($spacing, 'xl');
	border-radius: map-get($rounded, 'xl');
	border: 0;
	cursor: pointer;
	transition: all 0.3s ease;
	text-decoration: none;

	span {
		transition: all 0.3s ease;
		text-decoration: transparent underline;
	}

	@include hover-focus-active {
		span {
			text-decoration-color: currentColor;
		}
	}

	&--icon {
		svg, i {
			font-size: map-get($fontSizes, 'sm');
			transition: all 0.3s ease;

			&:first-child {
				margin-right: map-get($spacing, 'sm');
			}

			&:last-child {
				margin-left: map-get($spacing, 'sm');
			}
		}

		&.btn--small {
			svg, i {
				font-size: map-get($fontSizes, 'xs');
			}
		}

		&.btn--large {
			svg, i {
				font-size: map-get($fontSizes, 'md');
			}
		}

		@include hover-focus-active {
			.fa-rotate-right {
				transform: rotate(180deg);
			}
			.fa-arrow-right {
				transform: translateX(map-get($spacing, 'xs'));
			}
			.fa-arrow-left {
				transform: translateX(-(map-get($spacing, 'xs')));
			}
		}
	}

	&--small {
		font-size: map-get($fontSizes, 'xs');
		padding: map-get($spacing, 'sm') map-get($spacing, 'md');
	}

	&--large {
		font-size: map-get($fontSizes, 'md');
		line-height: 1;
		padding: map-get($spacing, 'md') map-get($spacing, 'xxl');
	}
}

// Colour specified on the button
@each $colour, $value in $colours {

	.btn--#{$colour} {
		@include sweep-to-right(darken($value, 15%));
		background: $value;
		color: color-contrast($value);
		border: 1px solid $value;
		display: inline-flex;
		align-items: center;
		transition: all 0.3s ease;
		overflow: hidden;

		@include hover-focus-active {
			border-color: darken($value, 15%);
		}
	}

	.btn--#{$colour}--hollow {
		color: $value;
		border: 1px solid $value;
		@include shutter-out-horizontal($value);
		background: transparent;
		display: inline-flex;
		overflow: hidden;

		@include hover-focus-active {
			color: color-contrast($value);
			border-color: $value;
		}

		&[aria-current="page"] {
			background: $value;
			color: color-contrast($value, $color-contrast-dark: map-get($colours, 'dark'), $color-contrast-light: $white);
		}
	}
}
